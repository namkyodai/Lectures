<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="scriptImports" type="xstring" value="// Your custom imports:%%00010%%00010import java.text.ParseException;%%00010import java.text.SimpleDateFormat;%%00010import java.time.Instant;%%00010import java.time.ZoneOffset;%%00010import java.util.Date;%%00010import java.util.concurrent.TimeUnit;%%00010%%00010"/>
        <entry key="scriptFields" type="xstring" value="// Your custom variables:%%00010%%00010private static final SimpleDateFormat WELL_FORMATTED = new SimpleDateFormat(&quot;yyyy-MM-dd'T'HH:mm&quot;);%%00010private static final SimpleDateFormat SLOPPIER = new SimpleDateFormat(&quot;yyyy-MM-dd'T'H:mm&quot;);%%00010// the time zone offset of the system running KNIME%%00010private static final ZoneOffset LOCAL_OFFSET = ZoneOffset.systemDefault().getRules().getOffset(Instant.now());%%00010%%00010"/>
        <entry key="scriptBody" type="xstring" value="// Enter your code here:%%00010%%00010Date parsedDate = null;%%00010%%00010try {%%00010%%00009parsedDate = WELL_FORMATTED.parse(c_column1);%%00010} catch (final ParseException pe1) {%%00010%%00009try {%%00010%%00009%%00009parsedDate = SLOPPIER.parse(c_column1);%%00010%%00009} catch (final ParseException pe2) {%%00010%%00009%%00009// NOOP + pedantic%%00010%%00009%%00009parsedDate = null;%%00010%%00009}%%00010}%%00010%%00010if (parsedDate == null) {%%00010%%00009out_rounded = null;%%00009%%00010} else {%%00010%%00009final long secondsSinceEpoch = TimeUnit.MILLISECONDS.toSeconds(parsedDate.getTime());%%00010%%00009final LocalDateTime parsed = LocalDateTime.ofEpochSecond(secondsSinceEpoch, 0, LOCAL_OFFSET);%%00010%%00009final int minutes = parsed.getMinute();%%00010%%00009final double normalizedMinutes = minutes / 60.0;%%00010%%00009final double rounded = Math.round(normalizedMinutes);%%00010%%00009final int roundedMinutes = (int)(rounded * 60);%%00010%%00009final LocalDateTime prepped = parsed.minusMinutes(minutes);%%00010%%00010%%00009out_rounded = prepped.plusMinutes(roundedMinutes);%%00010}%%00010%%00010"/>
        <config key="jarFiles">
            <entry key="array-size" type="xint" value="0"/>
        </config>
        <config key="outCols">
            <entry key="array-size" type="xint" value="1"/>
            <config key="0">
                <entry key="Name" type="xstring" value="rounded"/>
                <entry key="JavaName" type="xstring" value="out_rounded"/>
                <entry key="JavaType" type="xstring" value="java.time.LocalDateTime"/>
                <config key="Type">
                    <entry key="cell_class" type="xstring" value="org.knime.core.data.time.localdatetime.LocalDateTimeCell"/>
                    <entry key="is_null" type="xboolean" value="false"/>
                </config>
                <entry key="ConverterFactory" type="xstring" value="org.knime.core.data.time.localdatetime.LocalDateTimeCellFactory.create(class java.time.LocalDateTime)"/>
                <entry key="replaceExisting" type="xboolean" value="false"/>
            </config>
        </config>
        <config key="outVars">
            <entry key="array-size" type="xint" value="0"/>
        </config>
        <config key="inCols">
            <entry key="array-size" type="xint" value="1"/>
            <config key="0">
                <entry key="Name" type="xstring" value="column1"/>
                <entry key="JavaName" type="xstring" value="c_column1"/>
                <entry key="JavaType" type="xstring" value="java.lang.String"/>
                <config key="Type">
                    <entry key="cell_class" type="xstring" value="org.knime.core.data.def.StringCell"/>
                    <entry key="is_null" type="xboolean" value="false"/>
                </config>
                <entry key="ConverterFactory" type="xstring" value="org.knime.core.data.convert.java.SimpleDataCellToJavaConverterFactory(StringValue,class java.lang.String,String)"/>
            </config>
        </config>
        <config key="inVars">
            <entry key="array-size" type="xint" value="0"/>
        </config>
        <entry key="version" type="xstring" value="version 1.x"/>
        <entry key="templateUUID" type="xstring" isnull="true" value=""/>
        <entry key="runOnExecute" type="xboolean" value="false"/>
        <config key="bundles">
            <entry key="array-size" type="xint" value="0"/>
        </config>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="CONFIGURED"/>
    <entry key="factory" type="xstring" value="org.knime.base.node.jsnippet.JavaSnippetNodeFactory"/>
    <entry key="node-name" type="xstring" value="Java Snippet"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Java Snippet Nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.jsnippets"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="5.1.0.v202305191913"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Javasnippet"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.javasnippet.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="5.1.0.v202305191913"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="Java Snippet"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
