<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="hideInWizard" type="xboolean" value="false"/>
        <entry key="generateView" type="xboolean" value="false"/>
        <entry key="maxRows" type="xint" value="2500"/>
        <entry key="jsCode" type="xstring" value="// Dataset holding table%%00010var dataset = [];%%00010// Push column headers%%00010dataset.push(knimeDataTable.getColumnNames());%%00010// Dataset holding a single row%%00010var rowDataset = [];%%00010// Iterate over table and fill dataset%%00010var rows = knimeDataTable.getRows();%%00010for (var rowID = 0; rowID &lt; knimeDataTable.getNumRows(); rowID++) {%%00010%%00009var row = rows[rowID];%%00010%%00009rowDataset = [];%%00010%%00009for (var colID = 0; colID &lt; knimeDataTable.getNumColumns(); colID++) {%%00010%%00009%%00009rowDataset.push(row.data[colID]);%%00010%%00009}%%00010%%00009dataset.push(rowDataset);%%00010}%%00010// Create div holding the chart%%00010$('body').append('&lt;div id=&quot;chart_div&quot;&gt;&lt;/div&gt;');%%00010%%00010// Create callback function which is called after the chart package is loaded%%00010drawChart = function() {%%00010%%00009// Convert dataset to Google object%%00010%%00009var data = google.visualization.arrayToDataTable(dataset);%%00010%%00009// Define colors for lowest to highest value%%00010%%00009var options = {region : &quot;$${SRegion Code}$$&quot;,colorAxis: {colors: ['#ffffcc','#ffeda0','#fed976','#feb24c','#fd8d3c','#fc4e2a','#e31a1c','#bd0026','#800026']}, datalessRegionColor:'white', defaultColor:'#e9f0e7'};%%00010%%00009// Create chart with chart_div as parent%%00010%%00009var chart = new google.visualization.GeoChart(document.getElementById('chart_div'));%%00010%%00009// Draw the chart%%00010%%00009chart.draw(data, options);%%00010}%%00010%%00010// Load Google JavaScript API via jQuery getScript()%%00010$.getScript('https://www.gstatic.com/charts/loader.js')%%00010%%00009.done(function( script, textStatus ) {%%00010%%00009%%00009// Load Google corechart package with drawChart() as callback function%%00010%%00009%%00009// google.load('visualization', '1', {packages:['corechart'], callback:drawChart});%%00010    %%00009%%00009google.charts.load('46', {packages: ['corechart']});%%00010    %%00009%%00009google.charts.setOnLoadCallback(drawChart);%%00010%%00009})%%00010%%00009.fail(function( jqxhr, settings, exception ) {%%00010%%00009%%00009// Inform user about failure%%00010%%00009%%00009alert(&quot;Loading Google API failed.&quot;);%%00010});"/>
        <entry key="jsSVGCode" type="xstring" value=""/>
        <entry key="cssCode" type="xstring" value="body {%%00010    font-family: sans-serif;%%00010}%%00010h1 {%%00010    font-size: 1.5em;%%00010    font-weight: bold;%%00010}%%00010.success {%%00010    color: #006633;%%00010    font-weight: bold;%%00010}%%00010%%00010.failure {%%00010    color: #990000;%%00010    font-weight: bold;%%00010}%%00010"/>
        <config key="dependencies">
            <entry key="array-size" type="xint" value="1"/>
            <entry key="0" type="xstring" value="jQuery_3.1.1"/>
        </config>
        <entry key="waitTime" type="xint" value="0"/>
        <config key="outputVariables">
            <entry key="array-size" type="xint" value="0"/>
        </config>
        <entry key="customCSS" type="xstring" value=""/>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="Google Charts - Geo Chart"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="1117"/>
        <entry key="y-coordinate" type="xint" value="453"/>
        <entry key="width" type="xint" value="146"/>
        <entry key="height" type="xint" value="15"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="9"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles"/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="EXECUTED"/>
    <entry key="factory" type="xstring" value="org.knime.js.base.node.viz.generic3.GenericJSViewNodeFactory"/>
    <entry key="node-name" type="xstring" value="Generic JavaScript View"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME JavaScript Base Views"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.js.views"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.7.0.v202211091556"/>
    <entry key="node-feature-name" type="xstring" value="KNIME JavaScript Views"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.js.views.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.7.0.v202211091556"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="Generic JavaScript View"/>
    <entry key="hasContent" type="xboolean" value="true"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_spec_class" type="xstring" value="org.knime.core.node.port.inactive.InactiveBranchPortObjectSpec"/>
            <entry key="port_object_class" type="xstring" value="org.knime.core.node.port.inactive.InactiveBranchPortObject"/>
            <entry key="port_object_summary" type="xstring" value="Inactive Port Object"/>
            <entry key="port_spec_location" type="xstring" value="spec/spec.zip"/>
            <entry key="port_object_location" type="xstring" value="object/portobject.zip"/>
            <entry key="port_dir_location" type="xstring" value="port_1"/>
        </config>
        <config key="port_2">
            <entry key="index" type="xint" value="2"/>
            <entry key="port_spec_class" type="xstring" value="org.knime.core.node.port.flowvariable.FlowVariablePortObjectSpec"/>
            <entry key="port_object_class" type="xstring" value="org.knime.core.node.port.flowvariable.FlowVariablePortObject"/>
            <entry key="port_object_summary" type="xstring" value="Variables connection"/>
            <entry key="port_spec_location" type="xstring" value="spec/spec.zip"/>
            <entry key="port_object_location" type="xstring" value="object/portobject.zip"/>
            <entry key="port_dir_location" type="xstring" value="port_2"/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" value="c58c83cb-1b32-4c88-b66e-1f9ae1a8ebd9"/>
    </config>
</config>
